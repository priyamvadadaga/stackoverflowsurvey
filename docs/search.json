[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "StackOverflow 2024 Survey Analysis",
    "section": "",
    "text": "1 Introduction\nBefore OpenAI and other LLMs were built, StackOverflow was the go-to source for developers to have their questions answered. In May 2024 over 65,000 developers responded to Stack Overflow’s annual survey about coding, working, AI and how they feel about the industry. This data can provide valuable insights into the current state of the tech industry. As individuals who work in tech or aim to work in tech, understanding these trends is both interesting and essential These insights are crucial for understanding how the industry is evolving and how developers feel about the tools, skills, and environments shaping their work.\nQuestions we explore:\n\nDemographics of respondents: to understand the landscape of users StackOverflow caters to\nStackOverflow usage: with the advent of GPT, Claude and other LLM’s, how developers’ perspectives on more “traditional” sources like StackOverflow are changing and whether it still adequately meets their needs\nPerspectives on AI: to understand developers’ views on AI in the workplace, especially in the context of generative AI being posed as a threat to jobs",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description\nThis is the link from which the data set has been obtained: Stack Overflow Survey 2024\nEvery May since 2011, Stack Overflow conducts an annual survey. The 2024 survey included data about coding, working, AI and Stack Overflow users’ profiles and perceptions in these domains. The data is collected by Stack Overflow via a Qualtrics survey, and is updated on a yearly basis. The survey follows a questionnaire style with different types of questions including single-choice, multi-select, and Likert scale questions, ranking scale, boolean and text-based.\nThe May 2024 survey had over 65,000 respondents. Stack Overflow publishes results as a data table with 114 features (engineered from 87 questions) and 65,437 rows. It additionally publishes a schema and the questionnaire itself.\nOne concern in terms of parsing is with regards to multi-select questions. Parsing these either result in adding multiple columns which will have many missing values or parsing them in all possible combinations which has little interpretability. Hence, to begin, we limit the inputs to our analysis to the other question types. Additionally, we went through the schema and have picked questions whose responses are relevant to our research questions.\nFinally, the data is downloaded into the ‘data’ folder and is imported using read.csv in R.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(dplyr)\n\nsurvey &lt;- read.csv('data/survey_results_public.csv')\nschema &lt;- read.csv('data/survey_results_schema.csv')\n\n# ncol(survey)\n# nrow(survey)\n\nkeep &lt;- c('MainBranch', 'Age', 'RemoteWork', 'Check', 'EdLevel', 'YearsCode', 'YearsCodePro', 'DevType', 'Country', 'ConvertedCompYearly', 'SOVisitFreq', 'SOAccount', 'SOPartFreq', 'SOComm', 'AISelect', 'AISent', 'AIAcc', 'AIComplex', 'AIThreat', 'ICorPM', 'WorkExp', 'Knowledge_1', 'Knowledge_2', 'Knowledge_3', 'Knowledge_4', 'Knowledge_5', 'Knowledge_6', 'Knowledge_7', 'Knowledge_8', 'Knowledge_9', 'TimeSearching', 'TimeAnswering', 'ProfessionalCloud', 'ProfessionalQuestion', 'Industry', 'JobSat', 'SurveyLength', 'SurveyEase')\n\nselected &lt;- survey |&gt; dplyr::select(all_of(keep))\n\nselected &lt;- selected |&gt;\n  mutate(across(c('MainBranch', 'Age', 'RemoteWork', 'Check', 'EdLevel', 'DevType', 'SOVisitFreq', 'SOAccount', 'SOPartFreq', 'SOComm', 'AISelect', 'AISent', 'AIAcc', 'AIComplex', 'AIThreat', 'ICorPM', 'Knowledge_1', 'Knowledge_2', 'Knowledge_3', 'Knowledge_4', 'Knowledge_5', 'Knowledge_6', 'Knowledge_7', 'Knowledge_8', 'Knowledge_9', 'TimeSearching', 'TimeAnswering', 'ProfessionalCloud', 'ProfessionalQuestion', 'JobSat', 'SurveyLength', 'SurveyEase'), as.factor))\n\n\n\n\nCode\nlibrary(ggplot2)\nmissing_counts &lt;- colSums(is.na(selected))\nmissing_percent &lt;- (missing_counts / nrow(selected)) * 100\nmissing_df &lt;- data.frame(\n  column = names(missing_counts),\n  missing_percent = missing_percent\n)\nmissing_df$column &lt;- factor(missing_df$column, levels = missing_df$column)\n\nggplot(missing_df, aes(x = column, y = missing_percent)) +\n  geom_bar(stat = \"identity\", fill='skyblue') +\n  labs(\n    title = \"Percentage of Missing Values per Column\",\n    x = \"Columns\",\n    y = \"Missing Values (%)\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1, size=8)) +\n  scale_y_continuous(limits = c(0, 100))\n\n\n\n\n\n\n\n\n\nWe first look at the percentage of missing values in each of our selected columns. As is expected from an online questionnaire, there is a very high number of missing values with multiple columns crossing the 50% threshold as well. We observe that the ‘Check’ column, which was just a check to ensure that the participant was paying attention to the survey has zero missing values. Thus, we do not eliminate any rows based on this check. We also notice that the series of ‘Knowledge_’ questions, which all serve as part of a Likert-scale question have high missing values. These are probably a result of people skipping the question entirely.\nTo further check if there are any correlations between not answering certain types of questions, we plot a heatmap of correlations between missing values. We cannot compute correlations for Age, Check, and MainBranch since these questions have have no missing values.\n\n\nCode\nlibrary(reshape2)\n\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\n\nCode\nmissing_matrix &lt;- is.na(selected) * 1\nmissing_corr &lt;- cor(missing_matrix)\n\n\nWarning in cor(missing_matrix): the standard deviation is zero\n\n\nCode\nmissing_corr_melted &lt;- melt(missing_corr)\n\nggplot(missing_corr_melted, aes(Var1, Var2, fill = value)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient2(\n    low = \"blue\", high = \"red\", mid = \"white\", midpoint = 0,\n    limit = c(-1, 1), space = \"Lab\", name = \"Correlation\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size=6),\n    axis.text.y = element_text(size=6)\n  ) +\n  labs(title = \"Correlation of Missing Values\", x = \"Columns\", y = \"Columns\")\n\n\n\n\n\n\n\n\n\nWe observe that, typically, blocks of questions have missing values. For instance, it seems that missing values are correlated in the professional-related questions, i.e. from the column ICorPM until the industry question. These are perhaps a result of the individual being a student or just a hobby-developer. Similarly, another block of correlation is observed for the AI-related questions. Thus, it seems that perhaps, when skipping, individuals skipped certain lines of questioning entirely.\nWe believe that we can retain value by keeping these rows with missing values since perhaps the missing values form clusters of individuals. We explore one other cause of missing values - fatigue. To check this, we plot the percent missing values over the questions in order that they were answered, faceted on their answer to one of the last questions – “How do you feel about the length of the survey this year?”\n\n\nCode\nselected$SurveyLength &lt;- fct_na_value_to_level(selected$SurveyLength)\n\nmissing_values &lt;- selected %&gt;%\n  group_by(SurveyLength) %&gt;%\n  summarise(across(everything(), ~ mean(is.na(.)))) %&gt;%\n  pivot_longer(cols = -SurveyLength, names_to = \"question\", values_to = \"missing_proportion\")\n\nmissing_values &lt;- missing_values %&gt;%\n  left_join(schema, by = c(\"question\" = \"qname\"))\n\nggplot(missing_values, aes(x = question, y = missing_proportion)) +\n  geom_line(group = 1, color = \"darkgrey\", size = 0.5) +\n  geom_point(aes(color = force_resp), size = 1.5) +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = -0.01, size = 6)) +\n  labs(x = \"Survey Question\", y = \"Proportion of Missing Values\",\n       title = \"Missing Data Across Survey Questions by SurveyLength\",\n       color = \"Required Question\") +\n  facet_wrap(~ SurveyLength)\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nWe notice, as a general pattern, that the missing values have a somewhat upward trend as users progressed in the survey. As expected, the highest likelihood of missing values is when the last question is unanswered. Interestingly, those that thought the survey was “Too Short” had a higher proportion of missing values compared to those that thought it was “Too long”. Although somewhat counter intuitive, perhaps it is the fatigue from actually answering the questions that results in answering “Too long”, while not answering leads to believing it was too short.\nWe additionally look at data on whether the question is a required question. We notice that certain non-required questions also have very few missing values, indicating user keenness on answering these questions, such as their current development type (i.e. job) and questions regarding their experience with Stack Overflow. We also notice how even certain required questions have high missing values, which perhaps indicates a systemic flaw. We are considering dropping the rows where a required question was not answered, since this likely indicates an incomplete survey that was wrongly submitted.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#preprocessing",
    "href": "data.html#preprocessing",
    "title": "2  Data",
    "section": "2.3 Preprocessing",
    "text": "2.3 Preprocessing\nCertain variables in the dataset appeared as semi-colon separated lists which were parsed in python via preprocess.ipynb. Typically, this was to get the counts in a wide format.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Demographics\nCode\nsurvey &lt;- read.csv('data/survey_results_public.csv')\nschema &lt;- read.csv('data/survey_results_schema.csv')\nkeep &lt;- c('MainBranch', 'Age', 'RemoteWork', 'Check', 'EdLevel', 'YearsCode', 'YearsCodePro', 'DevType', 'Country', 'ConvertedCompYearly', 'SOVisitFreq', 'SOAccount', 'SOPartFreq', 'SOComm', 'AISelect', 'AISent', 'AIAcc', 'AIComplex', 'AIThreat', 'ICorPM', 'WorkExp', 'Knowledge_1', 'Knowledge_2', 'Knowledge_3', 'Knowledge_4', 'Knowledge_5', 'Knowledge_6', 'Knowledge_7', 'Knowledge_8', 'Knowledge_9', 'TimeSearching', 'TimeAnswering', 'ProfessionalCloud', 'ProfessionalQuestion', 'Industry', 'JobSat', 'SurveyLength', 'SurveyEase')\nselected &lt;- survey |&gt; dplyr::select(all_of(keep))\nselected &lt;- selected |&gt;\n  mutate(across(c('MainBranch', 'Age', 'RemoteWork', 'Check', 'EdLevel', 'DevType', 'SOVisitFreq', 'SOAccount', 'SOPartFreq', 'SOComm', 'AISelect', 'AISent', 'AIAcc', 'AIComplex', 'AIThreat', 'ICorPM', 'Knowledge_1', 'Knowledge_2', 'Knowledge_3', 'Knowledge_4', 'Knowledge_5', 'Knowledge_6', 'Knowledge_7', 'Knowledge_8', 'Knowledge_9', 'TimeSearching', 'TimeAnswering', 'ProfessionalCloud', 'ProfessionalQuestion', 'JobSat', 'SurveyLength', 'SurveyEase'), as.factor))\n\nwrite_json(selected, \"data/selected.json\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#demographics",
    "href": "results.html#demographics",
    "title": "3  Results",
    "section": "",
    "text": "3.1.1 Education\nThe survey data covers Stack Overflow users across varying education levels. The distribution of highest level of education obtained is plotted below.\n\n\nCode\nselected$EdLevel &lt;- factor(selected$EdLevel, \n                           levels = c(\"Primary/elementary school\", \n                                      \"Secondary school (e.g. American high school, German Realschule or Gymnasium, etc.)\",\n                                      \"Some college/university study without earning a degree\",\n                                      \"Associate degree (A.A., A.S., etc.)\",\n                                      \"Bachelor’s degree (B.A., B.S., B.Eng., etc.)\",\n                                      \"Master’s degree (M.A., M.S., M.Eng., MBA, etc.)\",\n                                      \"Professional degree (JD, MD, Ph.D, Ed.D, etc.)\",\n                                      \"Something else\"))\n\nggplot(selected, aes(x = EdLevel)) +\n  geom_bar(fill = \"skyblue\", color = \"black\", linewidth=0.1) +\n  labs(\n    title = \"Distribution of Highest Level of Formal Education\",\n    x = \"Education Level\",\n    y = \"Count\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nThe data highlights that StackOverflow caters primarily to a highly educated audience, with over 40,000 individuals holding advanced degrees. However, the presence of nearly 16,000 respondents with lower levels of formal education and more unconventional paths demonstrates that the platform still attracts a diverse range of learners and practitioners. This diversity showcases the platform’s appeal not only as a resource for trained developers but also for self-taught individuals and those transitioning from non-traditional educational backgrounds. Given this distribution, education may be a key variable in distinguishing between groups of opinions on AI.\n\n\n3.1.2 Industry\n\n\nCode\nindustry_counts_df &lt;- as.data.frame(table(selected$Industry))\nindustry_counts_df &lt;- industry_counts_df[order(-industry_counts_df$Freq), ]\n\ntreemap(industry_counts_df,\n        index = \"Var1\",         # Category variable\n        vColor = \"Freq\", \n        vSize = \"Freq\",  \n        palette = 'Blues',\n        draw = TRUE,\n        title = \"Distribution of Industries of Respondents\",\n        border.col = \"white\"\n)\n\n\n\n\n\n\n\n\n\nMost survey respondents were in the Software Development industry. Fintech as well as Internet, Telecomm or Information Services are also prominent, reflecting the growing importance of digital financial services and communication technologies. Banking/Financial Services, Healthcare, Manufacturing, and Retail and Consumer Services are moderately sized. Sectors like Government and Media & Advertising Services have smaller representations, suggesting either niche markets or less emphasis compared to larger sectors. Higher Education, Transportation, or Supply Chain, and Computer Systems Design Services are similarly sized. The inclusion of traditionally non-tech industries like Healthcare, Government, and Retail shows that technology professionals are present across diverse fields. The dominance of tech industries is expected given the focus on StackOverflow, but it is interesting to observe the growing presence of coding-based methods in sectors such like Energy.\n\n\n3.1.3 Languages\n\n\nCode\nlanguages &lt;- read.csv('data/languages.csv')\nggplot(languages, aes(x = reorder(index, -Language), y=Language)) +\n  geom_col(fill='lightblue') +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))+\n  labs(x = \"Language\", y = \"Count\",title = \"Most common languages used\")\n\n\n\n\n\n\n\n\n\nThe plot shows that mostly Javascript and HTML are the languages most used by respondents of the survey, indicating that majority of the respondents are in the web development field. This is then followed by other common softwares like Python, SQL, Typescript, Java, C++ and more. There is a noticeable drop in usage after the top three languages. Many languages on the right tail have significantly lower counts, indicating specialized applications.\n\n\n3.1.4 Age v/s Coding Practice\n\n\nCode\nggplot(selected, aes(x = Age)) +\n  geom_bar(fill='lightblue') +\n  facet_wrap(~ MainBranch) +\n  labs(title = \"Distribution of Age by Main Branch\",\n       x = \"Age\",\n       y = \"Count\")+\n  theme(axis.text.x = element_text(angle = 90, hjust = 1),\n        strip.text = element_text(size = 8, hjust = 0, vjust = 0.5, lineheight = 1.2))\n\n\n\n\n\n\n\n\n\nMajority of respondents are professional developers, with a right-skew, as most developers fall within the 18-44 age range, with the modal range being 25-34 years. This indicates a strong presence of younger professionals in the tech industry, likely driven by increasing demand for tech skills across industries. Those who code primarily as a hobby or are learning to code represent significantly smaller proportions of the total respondents. Interestingly, their distribution skews heavily toward the 18-24 age group, reflecting a pipeline of aspiring developers or those exploring programming as part of their education or career. On the other hand, respondents who occasionally code as part of their work or studies show a broader age distribution, indicating coding’s growing utility as a secondary skill in non-tech professions. Former professional developers are a small segment and predominantly fall in older age brackets, likely indicating transitions to managerial or non-coding roles.\n\n\n3.1.5 Average Years of Coding Experience by Development Type\n\n\nCode\navg_years_code_pro &lt;- selected %&gt;%\n  group_by(DevType) %&gt;%\n  summarize(avg_years_code_pro = mean(as.numeric(YearsCodePro), na.rm = TRUE))\n\navg_years_code_pro &lt;- avg_years_code_pro %&gt;%\n  mutate(DevType = fct_explicit_na(DevType, na_level = \"NA\")) %&gt;%\n  mutate(DevType = fct_rev(DevType))  # Reverse factor levels\n\nggplot(avg_years_code_pro, aes(x = avg_years_code_pro, y = reorder(DevType, avg_years_code_pro))) +\n  geom_point(color = \"skyblue\", size = 2) +  # Use points instead of bars\n  labs(x = \"Average Years of Professional Coding\", y = \"Developer Type\", \n       title = \"Avg. Years of Professional Coding by Developer Type\") +\n  theme_minimal() +  # Cleaner theme\n  theme(axis.text.y = element_text(size = 8),  # Adjust y-axis text size\n        axis.title = element_text(size = 10))  # Adjust axis title size\n\n\n\n\n\n\n\n\n\nThis graph represents the suspected – those with most years of professional coding experience hold higher positions like C-Suite, Managers, Product Managers (exceeding 15 years in coding) whereas those with fewer years of coding experience tend to be Students and more entry-level roles such as Developers and Data Analysts. We see that those with lowest average experience levels are students or entry-level professionals, and with progression, the roles become more specialized, indicating the natural tendency to specialize over one’s career. Interestingly, however, certain specialized roles like Blockchain Developers require relatively less experience, suggesting the quick growth of these newer fields. Another interesting observation is the fairly high experience among Marketing or Sales professionals, which may be attributed to the advent of digital marketing and leveraging code to analyze market trends. With a wide range of the average coding experience, it would be interesting to observe sentiment regarding both StackOverflow and AI as aids to coding.\n\n\n3.1.6 Remote Work Behavior by Development Type\n\n\nCode\nRemoteWork_order  &lt;-  c('Remote', 'Hybrid (some remote, some in-person)', 'In-person')\nselected$RemoteWork &lt;- factor(selected$RemoteWork, levels = RemoteWork_order, ordered = TRUE)\n\nfiltered &lt;- selected |&gt;\n  filter(!is.na(DevType) & !is.na(RemoteWork))\n\nggplot(filtered, aes(x = DevType, fill = RemoteWork)) +\n  geom_bar(position = \"fill\") +\n  scale_fill_brewer(palette = \"Blues\") +\n  labs(x = \"Developer Type\", y = \"Proportion of Remote Work\", \n       title = \"Proportion of Remote Work by Developer Type\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90, hjust=1, vjust=-0.01))\n\n\n\n\n\n\n\n\n\nFew roles require in-person presence, including Hardware Engineers, Embedded Aplplications Developers and of course Educators and Students. Certain other roles are extremely open to Remote work, including Blockchain developers, Developer Advocates, and Game & Graphics Developers. Across roles, there is a significant proportion of hybrid employees, which is a common post-Covid development. Given these distributions, we explore questions regarding AI usage, and whether remote work tends to create more positive sentiment and adoption.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#stackoverflow-usage",
    "href": "results.html#stackoverflow-usage",
    "title": "3  Results",
    "section": "3.2 StackOverflow Usage",
    "text": "3.2 StackOverflow Usage\nStackOverflow is driven primarily through user contributions. It has been the go-to for development-related knowledge-sharing, where active participation is essential. From posting questions to answering queries to voting on content, user participation drives the platform’s benefits and success. We begin by analyzing the relationship between StackOverflow visits and participation to get insights into user engagement and community dynamics.\n\n3.2.1 Visits versus Participation\n\n\nCode\nAIThreat_order &lt;- c('No', 'Unsure', 'Yes')\nselected$AIThreat &lt;- factor(selected$AIThreat, levels = AIThreat_order, ordered = TRUE)\n\nAISent_order &lt;- c('Very unfavorable', 'Unfavorable', 'Unsure', 'Indifferent', 'Favorable', 'Very favorable')\nselected$AISent &lt;- factor(selected$AISent, levels = AISent_order, ordered = TRUE)\n\nAIComplex_order &lt;- c('Very poor at handling complex tasks', 'Bad at handling complex tasks', 'Neither good or bad at handling complex tasks', 'Good, but not great at handling complex tasks', 'Very well at handling complex tasks')\nselected$AIComplex &lt;- factor(selected$AIComplex, levels = AIComplex_order, ordered = TRUE)\n\nSOVisitFreq_order &lt;- c('Less than once per month or monthly', 'A few times per month or weekly', 'A few times per week', 'Daily or almost daily', 'Multiple times per day')\nselected$SOVisitFreq &lt;- factor(selected$SOVisitFreq, levels = SOVisitFreq_order, ordered = TRUE)\n\nSOPartFreq_order &lt;- c('I have never participated in Q&A on Stack Overflow', 'Less than once per month or monthly', 'A few times per month or weekly', 'A few times per week', 'Daily or almost daily', 'Multiple times per day')\nselected$SOPartFreq &lt;- factor(selected$SOPartFreq, levels = SOPartFreq_order, ordered = TRUE)\n\nselected_vf_pf &lt;- selected %&gt;%\n  filter(!is.na(SOVisitFreq) & !is.na(SOPartFreq))\n\nggplot(selected_vf_pf, aes(x = SOVisitFreq, fill = SOPartFreq)) +\n  geom_bar(position = \"fill\", color = \"black\", size=0.1) +\n  labs(x = \"Visit Frequency\", \n       y = \"Proportion\", \n       fill = \"Participation Frequency\",\n       title = \"Relationship Between Visit and Participation Frequency\") +\n  scale_x_discrete(labels = wrap_format(10))\n\n\n\n\n\n\n\n\n\nWe see a natural positive correlation between the visit frequency and participation frequency of StackOverflow users. As there is higher visitation, there is naturally greater participation. It is interesting to see that even among those that visit StackOverflow multiple times per day, nearly a quarter have never participate. These users that passively consume content may be prone to shifting towards AI tools for problem solving. Continuation of such practices may lead to a potential systemic issue, as most large language models train on online data, which relies heavily on user contributions. A decline in participation could be detrimental to growth, making it pivotal to maintain a sense of community.\n\n\n3.2.2 ‘Community’ Sentiment\nBy faceting the same graph on community, we explore the impact this feeling of community may have on participation.\n\n\nCode\nSOComm_order &lt;- c('No, not at all', 'No, not really', 'Not sure', 'Neutral', 'Yes, somewhat', 'Yes, definitely')\nselected_vf_pf$SOComm &lt;- factor(selected_vf_pf$SOComm, levels = SOComm_order, ordered = TRUE)\n\nselected_vf_pf &lt;- selected_vf_pf |&gt;\n  filter(!is.na(SOComm))\nggplot(selected_vf_pf, aes(x = SOVisitFreq, fill = SOPartFreq)) +\n  geom_bar(position = \"fill\", color = \"black\", size=0.1) +\n  labs(x = \"Visit Frequency\", \n       y = \"Proportion\", \n       fill = \"Participation Frequency\",\n       title = \"Relationship Between Visit and Participation Frequency\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  facet_wrap(~ SOComm)\n\n\n\n\n\n\n\n\n\nWe can see that indeed the users that feel like they’re part of the StackOverflow Community not only participate, but participate frequently no matter how often they visit. Those who answered “Yes, definitely” are represented across all levels of participation frequency but are especially prominent among the most active users, such as those participating “daily or almost daily” or “multiple times per day.” This suggests a strong connection between a sense of belonging and active engagement in the community. On the other hand, those that feel “No, not at all” or “No, not really” barely engage, withparticipation being limited to “less than once per month or monthly” or no participation at all. Even among those that visit frequently, a lack of community connection correlates with lower participation levels. This reiterates the previous point on fostering a sense of community to ensure continued contributions.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#artificial-intelligence-perceptions",
    "href": "results.html#artificial-intelligence-perceptions",
    "title": "3  Results",
    "section": "3.3 Artificial Intelligence Perceptions",
    "text": "3.3 Artificial Intelligence Perceptions\nWe suspect that the advent of AI has led to certain changes in user behavior, including potentially a shift away from using resources like StackOverflow and relying on LLM’s like GPT and Claude. Additionally, the subject of AI has sparked great debate in the context of being a threat. In this section, we analyze this behavior and these opinions in developers.\n\n3.3.1 Interest in AI Integration\n\n\nCode\nAI_survey &lt;- read.csv('data/parsed_AItools.csv')\nAI &lt;- subset(AI_survey, select = -X)\n\ndata_long &lt;- AI %&gt;%\n  pivot_longer(cols = -index, names_to = \"category\", values_to = \"value\")\n\nggplot(data_long, aes(x = index, y = category, fill = value)) +\n  geom_tile() +\n  scale_fill_viridis(option = \"F\", direction = -1) +  # Color scale\n  labs(x = \"Development Workflow\", y = \"AI Integration Interest\", title = \"Interest in Integrating AI into Development Activities\") +\n  scale_y_discrete(labels = c(\"Currently.Using\" = \"Currently using\", \"Interested.in.Using\" = \"Interested in using\", \"Not.interested.in.Using\" = \"Not interested in using\")) +  # Relabel y-axis\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nWe see that a fairly high number of users is already using AI for writing code and, crucially in our context, for searching for answers and debugging and getting help. This reinforces the concerns raised in previous sections whilst also highlighting the benefits of AI. We see that across most domains, there is great interest in using AI if not already in use, especially to test code, learn about codebases, commit and review code, deploy and monitor code, predictive analytics and document code. However, more interestingly, there are 2 domains where there is little interest in incorporaitng AI, (i) project planning and (ii) deployment and monitoring. These perhaps represent the more evolved stages of tech jobs (i.e. roles of project managers and senior engineers) which are believed to still be more accurate when performed by humans.\nContinuing this exploration, and since we observe a high usage of AI to search for answers, we observe the relationship between StackOverflow visits and AI Usage.\n\n\n3.3.2 StackOverflow or AI?\n\n\nCode\nSOVisitFreq_order &lt;- c('Less than once per month or monthly', 'A few times per month or weekly', 'A few times per week', 'Daily or almost daily', 'Multiple times per day')\nselected$SOVisitFreq &lt;- factor(selected$SOVisitFreq, levels = SOVisitFreq_order, ordered = TRUE)\n\nfiltered_data &lt;- selected |&gt;\n  filter(!is.na(AISelect) & !is.na(SOVisitFreq))\n\ncontingency_table &lt;- table(filtered_data$SOVisitFreq, filtered_data$AISelect)\n\nmosaicplot(contingency_table, color=TRUE, shade=TRUE, las = 2, \n           main='Relationship between using SO and using AI',\n           xlab='Using SO', ylab='Using AI')\n\n\n\n\n\n\n\n\n\nWe see, via the blue zone, that there is a significantly high number of people that currently use StackOverflow almost daily and plan to use AI in the near future. This is particularly interesting since it may represent the “shifting” population that we referred to earlier. There is also a higher than expected level of individuals that selected that they barely use SO and do not plan on using AI. This is expected since this likely represents the segment that is not frequently running into bugs or needs the community contribution. Interestingly, there are no significant proportion that uses StackOverflow often and concurrently uses AI often.\nContinuing our previous exploration, we study the degrees to which there is interest in integrating AI into various parts of a development workflow.\n\n\n3.3.3 (Future) AI in development workflows\n\n\nCode\nai_next &lt;- read.csv('data/ai_next.csv')\n\nlikert(index ~ .,data=ai_next, ylab=NULL, ReferenceZero=3,\n  as.percent=TRUE,\n  main = list(\"Future AI integration into workflow\",x=unit(.55, \"npc\")),\n  strip=FALSE,\n  par.strip.text=list(cex=.7))\n\n\n\n\n\n\n\n\n\nWe see that across the developement workflows, there is a strong positive sentiment to integrate AI in the future. Thus, the general sentiment across programmers is that adoption of AI across workflows likely to reduce redundant human work and boost productivity. There is a still a small portion, about 8-10% of survey takers, that still are unfavorable towards AI integration. We posit that perhaps this sentiment is a result of age and thereby comfort with “new” technology. To analyze this, we observe the behavior across age groups in already using AI tools.\n\n\n3.3.4 Is age just a number?\n\n\nCode\nselected$AISelect &lt;- factor(\n  ifelse(is.na(selected$AISelect), \"NA\", as.character(selected$AISelect)),\n  levels = c('Yes', 'No, but I plan to soon', 'No, and I don\\'t plan to', 'NA'),\n  ordered = TRUE\n)\nAge_order &lt;- c(\"Under 18 years old\", \"18-24 years old\", \"25-34 years old\", \"35-44 years old\", \"45-54 years old\", \"55-64 years old\", \"65 years or older\", \"Prefer not to say\")\nselected$Age &lt;- factor(selected$Age, levels = Age_order, ordered = TRUE)\n\nggplot(selected, aes(x = Age, y = AISelect)) +\n  geom_jitter(aes(color = AISelect), width = 0.1, height = 0.1, alpha = 0.01) +\n  theme_minimal() +\n  labs(y = \"AISelect\") +\n  theme(legend.position = \"none\") -&gt; p1\n\ncounts &lt;- selected %&gt;%\n  group_by(Age, AISelect) %&gt;%\n  summarize(Count = n(), .groups = \"drop\")\n\nggplot(counts, aes(x = Age, y = Count, color = AISelect, group = AISelect)) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  theme_minimal() +\n  labs(\n    title = \"AI usage across Ages\",\n    x = \"Age\",\n    y = \"Count of Responses\"\n  ) +\n  theme(\n    legend.position = \"top\",          # Remove legend\n    axis.title.x = element_blank(),   # Remove x-axis title\n  )  -&gt; p2\n\np2 / p1\n\n\n\n\n\n\n\n\n\nAs we expected, we see that AI adoption into workflows amongst developers is most prevelant amongst young professionals. There is a right skew indicating that older people have adopted AI less. However, there is also a fair number of respondents that don’t and do not plan to use AI. It was the second most popular view amongst 25-34 year olds, which indicates a near-polarization when it comes to comfort with AI. As a secondary distinction, we check how these views vary by country.\n\n\n3.3.5 AI Usage by Country\n\n\nCode\naiselectcountry &lt;- read.csv('data/AISelect_CountryCode.csv')\n\nai_select_data &lt;- aiselectcountry %&gt;%\n  filter(!is.na(AISelect)) %&gt;%  # Remove rows with missing data\n  group_by(Country_Code) %&gt;%  # Group by country\n  summarise(\n    ThreatCount = sum(AISelect == \"Yes\", na.rm = TRUE),  # Count how many think AI is a threat\n    TotalCount = n(),  # Count the total number of responses\n    ProportionThreat = ThreatCount / TotalCount * 100  # Calculate the proportion\n  )\n\nworld &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\")\nworld_data &lt;- left_join(world, ai_select_data, by = c(\"iso_a3\" = \"Country_Code\"))\n\nggplot(data = world_data) +\n  geom_sf(aes(fill = ProportionThreat)) +\n  scale_fill_viridis_c(name = \"Proportion of AI Usage\") +\n  theme_minimal() +\n  labs(title = \"Proportion of AI Usage\") +\n  theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\n\n\nLighter regions across the map highlight higher AI usage, include parts of Asia, Europe, and North America. We see that developed nations with robust technologies have typically adopted AI practices, with over 50% respondents already using AI. Interestingly, these stats are even higher for many developing countries across Asia including Mongolia, China, India. We finally want to check what determines this flow of AI sentiments.\n\n\n3.3.6 AI – good, bad, ugly?\n\n\nCode\nAIThreat_order &lt;- c('No', 'Unsure', 'Yes')\nselected$AIThreat &lt;- factor(selected$AIThreat, levels = AIThreat_order, ordered = TRUE)\n\nAISent_order &lt;- c('Very unfavorable', 'Unfavorable', 'Unsure', 'Indifferent', 'Favorable', 'Very favorable')\nselected$AISent &lt;- factor(selected$AISent, levels = AISent_order, ordered = TRUE)\n\nAIComplex_order &lt;- c('Very poor at handling complex tasks', 'Bad at handling complex tasks', 'Neither good or bad at handling complex tasks', 'Good, but not great at handling complex tasks', 'Very well at handling complex tasks')\nselected$AIComplex &lt;- factor(selected$AIComplex, levels = AIComplex_order, ordered = TRUE)\n\nAIAcc_order &lt;- c('Highly distrust', 'Somewhat distrust', 'Neither trust nor distrust', 'Somewhat trust', 'Highly trust')\nselected$AIAcc &lt;- factor(selected$AIAcc, levels = AIAcc_order, ordered = TRUE)\n\nfiltered_data &lt;- selected %&gt;%\n  filter(MainBranch == \"I am a developer by profession\") %&gt;%\n  filter(!is.na(AISelect) & !is.na(AISent) & !is.na(AIAcc) & !is.na(AIComplex) & !is.na(AIThreat))\n\nalluvial_data &lt;- filtered_data |&gt;\n  group_by(AIThreat, AIComplex, AISent, AIAcc) |&gt;\n  summarise(Freq = n()) |&gt;\n  ungroup()\n\n\n\n\nCode\nggplot(alluvial_data,\n       aes(axis1 = AIThreat, axis2 = AIComplex, axis3 = AISent, axis4 = AIAcc, y = Freq)) +\n  geom_alluvium(aes(fill = AIAcc), alpha = 0.8) +\n  geom_stratum(color = \"gray\", fill = \"lightgray\", alpha = 0.9) +\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), \n            size = 2.5, color = \"black\", vjust = -0.5) +\n  scale_x_discrete(limits = c(\"AI Threat\", \"Complexity\", \"Sentiment\", \"Accuracy\"),\n                   expand = c(0.2, 0.2)) +\n  scale_fill_brewer(palette = \"RdYlBu\", name = \"Trust Level\") +\n  theme_minimal(base_size = 8) +\n  labs(title = \"Alluvial Diagram for Developers\",\n       x = NULL,\n       y = \"Frequency\") +\n  theme(legend.position = 'bottom', plot.title = element_text(size = 17)) -&gt; p\n\np\n\n\n\n\n\n\n\n\n\nAcross the four parameters that measure users’ perspectives on AI, we observe that although typically polarized views are “sticky”, in the sense that those hold strong positive views or strong negative views hold these across their beliefs in the AI’s accuracy, its ability to handle complex tasks, and their general sentiment. Individuals expressing neutral opinions, such as “Neither good nor bad at handling complex tasks,” often demonstrate variability in their sentiment and trust levels, transitioning between indifference and moderate trust. A very small proportion of users identify AI as a significant threat. Among these, distrust is more common, aligning with unfavorable sentiment and poor ratings for AI’s ability to handle complexity. Those who view AI as capable of managing complex tasks generally align with higher levels of trust and favorable sentiment. These individuals rarely perceive AI as a threat.\nThe dispersed structure of the alluvial diagram mirrors the current general sentiment toward AI, where opinions are multifaceted rather than a single consensus. We can gauge a sense of anticipation even in StackOverflow users, who are presumably more informed about AI than those in other domains. We expect that in future years, as the impacts of AI become clearer, the plot will paint a clearer picture.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "As the final plot, we were interested in exploring whether the kind of development undertaken impacts the sense of being part of StackOverflow community. We proposed earlier our belief that community development is crucial to advancements and growth both at the individual and societal level. To examine this, and additionally, to get a sense of the kinds of programmers that find StackOverflow posts useful, we create a plot that allows one to visualize by development type.\n\nSense of Community at StackOverflow\n\n\n\n\n\n\n\n\n\n\nWe observe that the general pattern is a positive skew, with most people holding the sentiment ‘No, not really’. Certain segments, however, have a stronger sense of community, including Mobile Developers, Scientists, those in R&D roles, Product Managers, and AI developers. It seems that typically, the roles that we previously flagged as more entry- to mid-level have a higher sense of community since they likely engage in day-to-day development work and are active users.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "Through our exploration, we performed a deep-dive into the changing world of developers – their habits, tools, and evolving preferences. We looked at how traditional resources like StackOverflow hold up in the age of AI. We started with 3 main domains to explore (i) Demographics, (ii) StackOverflow Usage, and (iii) AI Perceptions. In each domain, we had interesting findings:\n\nDemographics: Even in 2024, StackOverflow continues to attract a diverse audience of developers, ranging from students and self-taught programmers to highly educated professionals across age ranges. Its user base spans across industries, from the expected Software Development to the unexpected Energy spaces, highlighting the relevance and use of programming no matter the field.\nStackOverflow Usage: While StackOverflow remains an essential platform for problem-solving and knowledge sharing, there is a concerning decline in active participation from frequent visitors who consume content passively. A sense of community significantly impacts user engagement, highlighting the importance of fostering stronger connections to sustain participation. The platform’s future hinges on addressing this challenge, especially as reliance on AI tools grows.\nAI Perceptions: Developers show a mix of enthusiasm and skepticism regarding AI in the workplace. Younger professionals show a strong inclination toward integrating AI into workflows, particularly for tasks like debugging, testing, and predictive analytics. However, roles requiring more strategic and normative judgment, such as project planning and deployment, remain less impacted by AI. Trust in AI’s accuracy and capability to handle complexity varies across age groups, countries, and individual attitudes. While a small minority perceives AI as a threat, the overall sentiment is cautiously optimistic, with many recognizing its potential to enhance productivity and reduce redundant tasks.\n\nAs AI and other technological advancements continue to redefine development workflows, platforms like StackOverflow must evolve to complement these advancements, ensuring they remain relevant by adapting to changing user needs.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  }
]